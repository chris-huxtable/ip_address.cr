crystal_doc_search_index_callback({"repository_name":"github.com/chris-huxtable/ip_address.cr","body":"# ip_address.cr\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://chris-huxtable.github.io/ip_address.cr/)\n[![GitHub release](https://img.shields.io/github/release/chris-huxtable/ip_address.cr.svg)](https://github.com/chris-huxtable/ip_address.cr/releases)\n[![Build Status](https://travis-ci.org/chris-huxtable/ip_address.cr.svg?branch=master)](https://travis-ci.org/chris-huxtable/ip_address.cr)\n\nEncapsulates IPv4 and IPv6 Addresses and Blocks.\n\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  ip_address:\n    github: chris-huxtable/ip_address.cr\n```\n\n\n## Usage\n\n```crystal\nrequire \"ip_address\"\n```\n\nSome samples:\n```crystal\naddress0 = IP[\"127.0.0.128\"]\naddress1 = IP[\"10.0.0.0\"]?\naddress2 = IP.new(\"127.0.0.0\")\naddress3 = IP.new?(\"127.0.0.0\")\n\naddress4 = IP[\"2001:0db8:123:4567:89ab:cdef:1234:5678\"]\naddress5 = IP::Address[\"1::2\"]?\naddress6 = IP.new(\"::1\")\naddress7 = IP::Address.new?(\"::0\")\n\nblock0 = IP[\"127.0.0.0/8\"]\nblock1 = IP::Block[\"10.0.0.0/8\"]?\nblock2 = IP.new(\"127.0.0.0/8\")\nblock3 = IP::Block.new?(\"127.0.0.0/8\")\n\nblock0 = IP[\"127.0.0.0/8\"]\nblock1 = IP::Block[\"10.0.0.0/8\"]?\nblock2 = IP.new(\"127.0.0.0/8\")\nblock3 = IP::Block.new?(\"127.0.0.0/8\")\n\nloopback = IP::Address::IPv4.loopback\n\nblock0.includes?(address0)\n```\n\n\n## Contributing\n\n1. Fork it ( https://github.com/chris-huxtable/ip_address.cr/fork )\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n\n## Contributors\n\n- [Chris Huxtable](https://github.com/chris-huxtable) - creator, maintainer\n","program":{"html_id":"github.com/chris-huxtable/ip_address.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP","path":"IP.html","kind":"module","full_name":"IP","name":"IP","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address.cr","line_number":16,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr"},{"filename":"ip_address.cr","line_number":18,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"[](string:String)-class-method","html_id":"[](string:String)-class-method","name":"[]","doc":"Constructs a new IPv4 or IPv6 `IP::Address` or `IP::Block` by interpreting the contents of a `String`.\n\nExpects an address in acceptable form.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"IP/Address.html\">IP::Address</a></code> or <code><a href=\"IP/Block.html\">IP::Block</a></code> by interpreting the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L25","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L25","def":{"name":"[]","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"addr = new?(string)\nif (!addr)\n  raise(MalformedError.new)\nend\nreturn addr\n"}},{"id":"[]?(string:String)-class-method","html_id":"[]?(string:String)-class-method","name":"[]?","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in acceptable form.\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L43","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L43","def":{"name":"[]?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return new?(string)"}},{"id":"new?(string:String)-class-method","html_id":"new?(string:String)-class-method","name":"new?","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in acceptable form.\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L48","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L48","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (string.empty?)\n  return nil\nend\nif ((string.count('/')) < 1)\n  if (  (string.count('.')) == 3)\n    return Address::IPv4.new?(string)\n  end\n  if (  (string.count(':')) > 1)\n    return Address::IPv6.new?(string)\n  end\nelse\n  if (  (string.count('.')) == 3)\n    return Block::IPv4.new?(string)\n  end\n  if (  (string.count(':')) > 1)\n    return Block::IPv6.new?(string)\n  end\nend\nreturn nil\n"}}],"constructors":[{"id":"new(string:String)-class-method","html_id":"new(string:String)-class-method","name":"new","doc":"Constructs a new IPv4 or IPv6 `IP::Address` or `IP::Block` by interpreting the contents of a `String`.\n\nExpects an address in acceptable form.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"IP/Address.html\">IP::Address</a></code> or <code><a href=\"IP/Block.html\">IP::Block</a></code> by interpreting the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L32","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip_address.cr#L32","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"addr = new?(string)\nif (!addr)\n  raise(MalformedError.new)\nend\nreturn addr\n"}}],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","path":"IP/Address.html","kind":"struct","full_name":"IP::Address","name":"Address","abstract":true,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/address.cr","line_number":16,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr"},{"filename":"ip/address.cr","line_number":289,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4","kind":"struct","full_name":"IP::Address::IPv4","name":"IPv4"},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6","kind":"struct","full_name":"IP::Address::IPv6","name":"IPv6"}],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP","kind":"module","full_name":"IP","name":"IP"},"doc":null,"summary":null,"class_methods":[{"id":"ipv4(string:String)-class-method","html_id":"ipv4(string:String)-class-method","name":"ipv4","doc":"Constructs a new IPv4 `IP::Address` from the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 <code><a href=\"../IP/Address.html\">IP::Address</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L58","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L58","def":{"name":"ipv4","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return IPv4.new(string)"}},{"id":"ipv4?(string:String)-class-method","html_id":"ipv4?(string:String)-class-method","name":"ipv4?","doc":"Constructs a new IPv4 `IP::Address` from the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 <code><a href=\"../IP/Address.html\">IP::Address</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L67","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L67","def":{"name":"ipv4?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return IPv4.new?(string)"}},{"id":"ipv6(string:String)-class-method","html_id":"ipv6(string:String)-class-method","name":"ipv6","doc":"Constructs a new IPv6 `IP::Address` from the contents of a `String`.\n\nExpects an address in the standard presentation form\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX  or in the compressed from\nsimilar to XXXX:XXXX::XXXX:XXXX:XXXX.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L78","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L78","def":{"name":"ipv6","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return IPv6.new(string)"}},{"id":"ipv6?(string:String)-class-method","html_id":"ipv6?(string:String)-class-method","name":"ipv6?","doc":"Constructs a new IPv6 `IP::Address` from the contents of a `String`.\n\nExpects an address in the standard presentation form\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX or in the compressed from\nsimilar to XXXX:XXXX::XXXX:XXXX:XXXX.\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L89","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L89","def":{"name":"ipv6?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return IPv6.new?(string)"}}],"constructors":[{"id":"[](string:String):self-class-method","html_id":"[](string:String):self-class-method","name":"[]","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX, or XXXX:XXXX::XXXX:XXXX:XXXX.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L26","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L26","def":{"name":"[]","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return new(string)"}},{"id":"[]?(string:String):self?-class-method","html_id":"[]?(string:String):self?-class-method","name":"[]?","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX, or XXXX:XXXX::XXXX:XXXX:XXXX.\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L41","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L41","def":{"name":"[]?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"return new?(string)"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX, or XXXX:XXXX::XXXX:XXXX:XXXX.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L31","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L31","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || (raise(MalformedError.new))"}},{"id":"new(sockaddr:::Pointer(LibC::Sockaddr)):self-class-method","html_id":"new(sockaddr:::Pointer(LibC::Sockaddr)):self-class-method","name":"new","doc":"Creates an `IP::Address` from the internal OS representation of a Socket Address.","summary":"<p>Creates an <code><a href=\"../IP/Address.html\">IP::Address</a></code> from the internal OS representation of a Socket Address.</p>","abstract":false,"args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::Sockaddr)"}],"args_string":"(sockaddr : ::Pointer(LibC::Sockaddr)) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L94","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L94","def":{"name":"new","args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::Sockaddr)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"family = sockaddr.value.sa_family\ncase (family)\nwhen LibC::AF_INET\n  return IPv4.new(sockaddr.as(::Pointer(LibC::SockaddrIn)))\nwhen LibC::AF_INET6\n  return IPv6.new(sockaddr.as(::Pointer(LibC::SockaddrIn6)))\nend\nraise(\"Unsupported family type: #{family}\")\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new IPv4 or IPv6 `IP::Address` by interpreting  the contents of a `String`.\n\nExpects an address in the form of [0-255].[0-255].[0-255].[0-255],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX, or XXXX:XXXX::XXXX:XXXX:XXXX.\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 or IPv6 <code><a href=\"../IP/Address.html\">IP::Address</a></code> by interpreting  the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L46","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L46","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (string.empty?)\n  return nil\nend\nif ((string.count('.')) == 3)\n  return IPv4.new?(string)\nend\nif ((string.count(':')) > 1)\n  return IPv6.new?(string)\nend\nreturn nil\n"}}],"instance_methods":[{"id":"+(other:Int):self-instance-method","html_id":"+(other:Int):self-instance-method","name":"+","doc":"Generates a new `IP::Address` with a given integer offset.","summary":"<p>Generates a new <code><a href=\"../IP/Address.html\">IP::Address</a></code> with a given integer offset.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"args_string":"(other : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L141","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L141","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (other < 0)\n  return self - (other * -1)\nend\nnew_value = value + other\nif (new_value > value)\n  return self.class.new(new_value)\nend\nraise(OverflowError.new)\n"}},{"id":"-(other:Int):self-instance-method","html_id":"-(other:Int):self-instance-method","name":"-","doc":"Generates a new `IP::Address` with a given integer offset.","summary":"<p>Generates a new <code><a href=\"../IP/Address.html\">IP::Address</a></code> with a given integer offset.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"args_string":"(other : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L149","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L149","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (other < 0)\n  return self + (other * -1)\nend\nnew_value = value - other\nif (new_value < value)\n  return self.class.new(new_value)\nend\nraise(UnderflowError.new)\n"}},{"id":"(other:IP::Address):Int-instance-method","html_id":"(other:IP::Address):Int-instance-method","name":"<=>","doc":"Compares this address with another, returning `-1`, `0` or `+1` depending if the\naddress is less, equal or greater than the *other* address.","summary":"<p>Compares this address with another, returning <code>-1</code>, <code>0</code> or <code>+1</code> depending if the address is less, equal or greater than the <em>other</em> address.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Int","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L163","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L163","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"return (value <=> other.value)"}},{"id":"(other:IP::Block):Int-instance-method","html_id":"(other:IP::Block):Int-instance-method","name":"<=>","doc":"Compares this address with block, returning `-1`, `0` or `+1` depending if the\naddress is less than, included in, or greater than the *other* block.","summary":"<p>Compares this address with block, returning <code>-1</code>, <code>0</code> or <code>+1</code> depending if the address is less than, included in, or greater than the <em>other</em> block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block) : Int","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L319","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L319","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"if other.includes?(self)\n  return 0\nend\nreturn (self <=> other.first)\n"}},{"id":"[](index:Int)-instance-method","html_id":"[](index:Int)-instance-method","name":"[]","doc":"Returns the requested component from the address.","summary":"<p>Returns the requested component from the address.</p>","abstract":true,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L138","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L138","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"adjacent?(other:IP::Block)-instance-method","html_id":"adjacent?(other:IP::Block)-instance-method","name":"adjacent?","doc":"Compares this address with an `IP::Block`, indicating if they are adjacent.\n\nAdjacency is when there are no addresses between the address and the other address\nblock and the address is not included in the block.","summary":"<p>Compares this address with an <code><a href=\"../IP/Block.html\">IP::Block</a></code>, indicating if they are adjacent.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L328","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L328","def":{"name":"adjacent?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value > last_value && (value == (last_value + 1)))\n  return true\nend\nif (value < first_value && (value == (first_value - 1)))\n  return true\nend\nreturn false\n"}},{"id":"adjacent?(other:IP::Address)-instance-method","html_id":"adjacent?(other:IP::Address)-instance-method","name":"adjacent?","doc":"Compares this address with another address, indicating if they are adjacent.\n\nAdjacency is when there are no addresses between the address and the other address\nand the two addresses are not the same.","summary":"<p>Compares this address with another address, indicating if they are adjacent.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L171","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L171","def":{"name":"adjacent?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value > other.value && (value == (other.value + 1)))\n  return true\nend\nif (value < other.value && (value == (other.value - 1)))\n  return true\nend\nreturn false\n"}},{"id":"family:Socket::Family-instance-method","html_id":"family:Socket::Family-instance-method","name":"family","doc":"Returns the `Socket::Family` associated with this address.","summary":"<p>Returns the <code>Socket::Family</code> associated with this address.</p>","abstract":false,"args":[],"args_string":" : Socket::Family","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L126","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L126","def":{"name":"family","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Socket::Family","visibility":"Public","body":"return case\nwhen ipv4?\n  Socket::Family::INET\nwhen ipv6?\n  Socket::Family::INET6\nelse\n  Socket::Family::UNSPEC\nend"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L157","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L157","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.hash(hasher)"}},{"id":"inspect(io:IO):Nil-instance-method","html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a type-specified presentation representation of the address to the\ngiven `IO`.","summary":"<p>Appends a type-specified presentation representation of the address to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L179","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L179","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.class.to_s(io)\nio << '('\nto_s(io)\nio << ')'\n"}},{"id":"ipv4?:Bool-instance-method","html_id":"ipv4?:Bool-instance-method","name":"ipv4?","doc":"Informs if the address is IPv4 or not.","summary":"<p>Informs if the address is IPv4 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L116","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L116","def":{"name":"ipv4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return self.is_a?(IP::Address::IPv4)"}},{"id":"ipv6?:Bool-instance-method","html_id":"ipv6?:Bool-instance-method","name":"ipv6?","doc":"Informs if the address is IPv6 or not.","summary":"<p>Informs if the address is IPv6 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L121","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L121","def":{"name":"ipv6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return self.is_a?(IP::Address::IPv6)"}},{"id":"loopback?:Bool-instance-method","html_id":"loopback?:Bool-instance-method","name":"loopback?","doc":"Informs if the address is in the loopback address space or not.","summary":"<p>Informs if the address is in the loopback address space or not.</p>","abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L135","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L135","def":{"name":"loopback?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"max_value-instance-method","html_id":"max_value-instance-method","name":"max_value","doc":"The maximum address of this type.","summary":"<p>The maximum address of this type.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L113","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L113","def":{"name":"max_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_sockaddr-instance-method","html_id":"to_sockaddr-instance-method","name":"to_sockaddr","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L186","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L186","def":{"name":"to_sockaddr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":"The internally stored value of the address.","summary":"<p>The internally stored value of the address.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L104","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L104","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"value_network-instance-method","html_id":"value_network-instance-method","name":"value_network","doc":"The internally stored value of the address in network byte order.","summary":"<p>The internally stored value of the address in network byte order.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L107","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L107","def":{"name":"value_network","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"width-instance-method","html_id":"width-instance-method","name":"width","doc":"The width of the address type.","summary":"<p>The width of the address type.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L110","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address.cr#L110","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4","path":"IP/Address/IPv4.html","kind":"struct","full_name":"IP::Address::IPv4","name":"IPv4","abstract":false,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/address/ipv4.cr","line_number":21,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ADDRESS_MAX","name":"ADDRESS_MAX","value":"4294967295_u32","doc":null,"summary":null},{"id":"ADDRESS_WIDTH","name":"ADDRESS_WIDTH","value":"32_u8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:Value)-class-method","html_id":"new(value:Value)-class-method","name":"new","doc":"Creates a new `IP::Address::IPv4` from a `{{ Value.id }}` value.","summary":"<p>Creates a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from a <code>{{ Value.id }}</code> value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Value"}],"args_string":"(value : Value)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L32","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L32","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Value"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv4` from the contents of a `String`. Expects an address\nin the form of [0-255].[0-255].[0-255].[0-255].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L39","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L39","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || (raise(MalformedError.new))"}},{"id":"new(octets:Octets):self-class-method","html_id":"new(octets:Octets):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv4` from a `Tuple` of 4 `UInt8`.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from a <code>Tuple</code> of 4 <code>UInt8</code>.</p>","abstract":false,"args":[{"name":"octets","doc":null,"default_value":"","external_name":"octets","restriction":"Octets"}],"args_string":"(octets : Octets) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L54","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L54","def":{"name":"new","args":[{"name":"octets","doc":null,"default_value":"","external_name":"octets","restriction":"Octets"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"value = 0_u32\nvalue = value + (octets[0].to_u32 << 24)\nvalue = value + (octets[1].to_u32 << 16)\nvalue = value + (octets[2].to_u32 << 8)\nvalue = value + octets[3]\nreturn new(value)\n"}},{"id":"new(sockaddr:::Pointer(LibC::SockaddrIn)):self-class-method","html_id":"new(sockaddr:::Pointer(LibC::SockaddrIn)):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv4` from a `SockaddrIn*`.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from a <code>SockaddrIn*</code>.</p>","abstract":false,"args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::SockaddrIn)"}],"args_string":"(sockaddr : ::Pointer(LibC::SockaddrIn)) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L65","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L65","def":{"name":"new","args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::SockaddrIn)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"v = sockaddr.value.sin_addr.s_addr.as(Value)\nreturn new((LibC.ntohl(v)).as(Value))\n"}},{"id":"new(value:Int):self-class-method","html_id":"new(value:Int):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv4` from an `Int`.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from an <code>Int</code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L71","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L71","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (value > ADDRESS_MAX)\n  raise(OutOfBoundsError.new(\"Value #{value} out of range. Too high.\"))\nend\nif (value < 0)\n  raise(OutOfBoundsError.new(\"Value #{value} out of range. Too low.\"))\nend\nreturn new(value.to_u32)\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new `IP::Address::IPv4` from the contents of a `String`. Expects an address\nin the form of [0-255].[0-255].[0-255].[0-255].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv4.html\">IP::Address::IPv4</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L47","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L47","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"octets = Parser.octets(string)\nif (!octets)\n  return nil\nend\nreturn new(octets)\n"}}],"instance_methods":[{"id":"[](index:Int):UInt8-instance-method","html_id":"[](index:Int):UInt8-instance-method","name":"[]","doc":"Returns the requested octet from the address.\n\nRaises `OutOfBoundsError` if the requested octet is not [0..3].","summary":"<p>Returns the requested octet from the address.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : UInt8","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L103","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L103","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"if (index > 3)\n  raise(OutOfBoundsError.new(\"Index #{index} out of bounds. Too high.\"))\nend\nif (index < 0)\n  raise(OutOfBoundsError.new(\"Index #{index} out of bounds. Too low.\"))\nend\nshift = (32 - ((index + 1) * 8))\nvalue = ((255 << shift) & @value) >> shift\nreturn value.to_u8\n"}},{"id":"loopback?:Bool-instance-method","html_id":"loopback?:Bool-instance-method","name":"loopback?","doc":"Informs if the address is in the loopback address space or not.","summary":"<p>Informs if the address is in the loopback address space or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L96","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L96","def":{"name":"loopback?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return IP::Block.loopback_ipv4.covers?(self)"}},{"id":"max_value:Value-instance-method","html_id":"max_value:Value-instance-method","name":"max_value","doc":"The maximum address of this type.","summary":"<p>The maximum address of this type.</p>","abstract":false,"args":[],"args_string":" : Value","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L91","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L91","def":{"name":"max_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"return ADDRESS_MAX"}},{"id":"octets:Octets-instance-method","html_id":"octets:Octets-instance-method","name":"octets","doc":"Returns a `Tuple` of 4 `UInt8` which represent the addresses octets.","summary":"<p>Returns a <code>Tuple</code> of 4 <code>UInt8</code> which represent the addresses octets.</p>","abstract":false,"args":[],"args_string":" : Octets","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L113","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L113","def":{"name":"octets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Octets","visibility":"Public","body":"return {self[0], self[1], self[2], self[3]}"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends the presentation representation of the address to the given `IO`.","summary":"<p>Appends the presentation representation of the address to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L118","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L118","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((((((io << self[0]) << '.') << self[1]) << '.') << self[2]) << '.') << self[3]"}},{"id":"to_sockaddr(port:UInt16=0_u16):::Pointer(LibC::Sockaddr)-instance-method","html_id":"to_sockaddr(port:UInt16=0_u16):::Pointer(LibC::Sockaddr)-instance-method","name":"to_sockaddr","doc":"Produces the c `sockaddr_in` struct required by `bind`, `connect`, `sendto`, and `sendmsg`.\n\n**Note:** Unix Network Programming: Volume 1, 3rd Edition, p.68\n- sin_len: default size of this struct is 16 bytes. Is set internally when passed though `bind`,\n`connect`, `sendto`, or `sendmsg`.\n- sin_zero: is unused.","summary":"<p>Produces the c <code>sockaddr_in</code> struct required by <code>bind</code>, <code>connect</code>, <code>sendto</code>, and <code>sendmsg</code>.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"0_u16","external_name":"port","restriction":"UInt16"}],"args_string":"(port : UInt16 = <span class=\"n\">0_u16</span>) : ::Pointer(LibC::Sockaddr)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L128","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L128","def":{"name":"to_sockaddr","args":[{"name":"port","doc":null,"default_value":"0_u16","external_name":"port","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(LibC::Sockaddr)","visibility":"Public","body":"sockaddr = uninitialized LibC::SockaddrIn\nsockaddr.sin_len = 16_u8.as(LibC::UInt8T)\nsockaddr.sin_family = LibC::AF_INET\nsockaddr.sin_port = (LibC.htons(port)).as(LibC::UInt16T)\nsockaddr.sin_addr.s_addr = value_network\nptr_sockaddr = Pointer(LibC::SockaddrIn).malloc\nptr_sockaddr.copy_from(pointerof(sockaddr), 1)\nreturn ptr_sockaddr.as(::Pointer(LibC::Sockaddr))\n"}},{"id":"value:Value-instance-method","html_id":"value:Value-instance-method","name":"value","doc":"The internally stored value of the address.","summary":"<p>The internally stored value of the address.</p>","abstract":false,"args":[],"args_string":" : Value","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L78","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L78","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"@value"}},{"id":"value_network:LibC::UInt32T-instance-method","html_id":"value_network:LibC::UInt32T-instance-method","name":"value_network","doc":"The internally stored value of the address in network byte order.","summary":"<p>The internally stored value of the address in network byte order.</p>","abstract":false,"args":[],"args_string":" : LibC::UInt32T","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L81","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L81","def":{"name":"value_network","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibC::UInt32T","visibility":"Public","body":"return LibC.htonl(value.as(LibC::UInt32T))"}},{"id":"width:UInt8-instance-method","html_id":"width:UInt8-instance-method","name":"width","doc":"The width of the address type.","summary":"<p>The width of the address type.</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L86","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr#L86","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"return ADDRESS_WIDTH"}}],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4/Octet","path":"IP/Address/IPv4/Octet.html","kind":"alias","full_name":"IP::Address::IPv4::Octet","name":"Octet","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv4.cr","line_number":24,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"UInt8","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4","kind":"struct","full_name":"IP::Address::IPv4","name":"IPv4"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4/Octets","path":"IP/Address/IPv4/Octets.html","kind":"alias","full_name":"IP::Address::IPv4::Octets","name":"Octets","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv4.cr","line_number":25,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"Tuple(UInt8, UInt8, UInt8, UInt8)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4","kind":"struct","full_name":"IP::Address::IPv4","name":"IPv4"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4/Value","path":"IP/Address/IPv4/Value.html","kind":"alias","full_name":"IP::Address::IPv4::Value","name":"Value","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv4.cr","line_number":23,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv4.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"UInt32","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv4","kind":"struct","full_name":"IP::Address::IPv4","name":"IPv4"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6","path":"IP/Address/IPv6.html","kind":"struct","full_name":"IP::Address::IPv6","name":"IPv6","abstract":false,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/address/ipv6.cr","line_number":19,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ADDRESS_MAX","name":"ADDRESS_MAX","value":"~0_u128","doc":null,"summary":null},{"id":"ADDRESS_WIDTH","name":"ADDRESS_WIDTH","value":"128_u8","doc":"0xFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_u128","summary":"<p>0xFFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_FFFF_u128</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address","kind":"struct","full_name":"IP::Address","name":"Address"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(value:Value)-class-method","html_id":"new(value:Value)-class-method","name":"new","doc":"Creates a new `IP::Address::IPv6` from a `{{ Value.id }}` value.","summary":"<p>Creates a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from a <code>{{ Value.id }}</code> value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Value"}],"args_string":"(value : Value)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L29","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L29","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Value"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv6` from the contents of a `String`. Expects an\naddress in the standard presentation form XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX\nor in the compressed from similar to XXXX:XXXX::XXXX:XXXX:XXXX.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L37","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L37","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || (raise(MalformedError.new))"}},{"id":"new(hextets:Hextets)-class-method","html_id":"new(hextets:Hextets)-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv6` from a `Tuple` of 8 `UInt16`.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from a <code>Tuple</code> of 8 <code>UInt16</code>.</p>","abstract":false,"args":[{"name":"hextets","doc":null,"default_value":"","external_name":"hextets","restriction":"Hextets"}],"args_string":"(hextets : Hextets)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L54","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L54","def":{"name":"new","args":[{"name":"hextets","doc":null,"default_value":"","external_name":"hextets","restriction":"Hextets"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"offset = (7 * 16).to_u128\nvalue = 0_u128\nhextets.each do |group|\n  value = value + (group.to_u128 << offset)\n  offset = offset - 16\nend\nreturn new(value)\n"}},{"id":"new(sockaddr:::Pointer(LibC::SockaddrIn6)):self-class-method","html_id":"new(sockaddr:::Pointer(LibC::SockaddrIn6)):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv6` from a `SockaddrIn6*`.\n\nTODO: Significant testing nessissary.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from a <code>SockaddrIn6*</code>.</p>","abstract":false,"args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::SockaddrIn6)"}],"args_string":"(sockaddr : ::Pointer(LibC::SockaddrIn6)) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L68","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L68","def":{"name":"new","args":[{"name":"sockaddr","doc":null,"default_value":"","external_name":"sockaddr","restriction":"::Pointer(LibC::SockaddrIn6)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"v = sockaddr.value\n{% if ((flag?(:darwin)) || (flag?(:openbsd))) || (flag?(:freebsd)) %}\n\t\t\tv = v.sin6_addr.__u6_addr.__u6_addr16\n\t\t{% else %}{% if flag?(:musl) %}\n\t\t\tv = v.sin6_addr.__in6_union.__s6_addr16\n\t\t{% else %}{% if (flag?(:gnu)) || (flag?(:linux)) %}\n\t\t\tv = v.sin6_addr.__in6_u.__u6_addr16\n\t\t{% end %}{% end %}{% end %}\nv.map! do |group|\n  next (LibC.ntohs(group)).as(UInt16)\nend\nreturn new({v[0], v[1], v[2], v[3], v[4], v[5], v[6], v[7]})\n"}},{"id":"new(value:Int):self-class-method","html_id":"new(value:Int):self-class-method","name":"new","doc":"Constructs a new `IP::Address::IPv6` from an `Int`.","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from an <code>Int</code>.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L83","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L83","def":{"name":"new","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if (value > ADDRESS_MAX)\n  raise(OutOfBoundsError.new(\"Value #{value} out of bounds. Too high.\"))\nend\nif (value < 0)\n  raise(OutOfBoundsError.new(\"Value #{value} out of bounds. Too low.\"))\nend\nreturn new(value.to_u128)\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new `IP::Address::IPv6` from the contents of a `String`. Expects an\naddress in the standard presentation form XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX\nor in the compressed from similar to XXXX:XXXX::XXXX:XXXX:XXXX.\n\nReturns `nil` when the input is malformed.\n","summary":"<p>Constructs a new <code><a href=\"../../IP/Address/IPv6.html\">IP::Address::IPv6</a></code> from the contents of a <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L47","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L47","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"hextets = Parser.hextets(string)\nif (!hextets)\n  return nil\nend\nreturn new(hextets)\n"}}],"instance_methods":[{"id":"[](index:Int):Hextet-instance-method","html_id":"[](index:Int):Hextet-instance-method","name":"[]","doc":"Returns the requested group from the address.\n\nRaises `OutOfBoundsError` if the requested group is not [0..7].","summary":"<p>Returns the requested group from the address.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : Hextet","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L117","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L117","def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hextet","visibility":"Public","body":"if (index > 7)\n  raise(OutOfBoundsError.new(\"Index #{index} out of bounds. Too high.\"))\nend\nif (index < 0)\n  raise(OutOfBoundsError.new(\"Index #{index} out of bounds. Too low.\"))\nend\nshift = ((7 - index) * 16).to_u128\nvalue = ((65535_u128 << shift) & @value) >> shift\nreturn value.to_u16\n"}},{"id":"hextets:Hextets-instance-method","html_id":"hextets:Hextets-instance-method","name":"hextets","doc":"Returns a `Tuple` of 8 `UInt16` which represent the addresses octets.","summary":"<p>Returns a <code>Tuple</code> of 8 <code>UInt16</code> which represent the addresses octets.</p>","abstract":false,"args":[],"args_string":" : Hextets","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L127","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L127","def":{"name":"hextets","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hextets","visibility":"Public","body":"return {self[0], self[1], self[2], self[3], self[4], self[5], self[6], self[7]}"}},{"id":"loopback?:Bool-instance-method","html_id":"loopback?:Bool-instance-method","name":"loopback?","doc":"Informs if the address is in the loopback address space or not.","summary":"<p>Informs if the address is in the loopback address space or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L110","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L110","def":{"name":"loopback?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return IP::Block.loopback_ipv6.covers?(self)"}},{"id":"max_value:Value-instance-method","html_id":"max_value:Value-instance-method","name":"max_value","doc":"The maximum address of this type.","summary":"<p>The maximum address of this type.</p>","abstract":false,"args":[],"args_string":" : Value","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L105","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L105","def":{"name":"max_value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"return ADDRESS_MAX"}},{"id":"to_s(upcase:Bool,minify:Bool,io:IO):Nil-instance-method","html_id":"to_s(upcase:Bool,minify:Bool,io:IO):Nil-instance-method","name":"to_s","doc":"Appends the presentation representation of the address to the given `IO`.","summary":"<p>Appends the presentation representation of the address to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"upcase","doc":null,"default_value":"","external_name":"upcase","restriction":"Bool"},{"name":"minify","doc":null,"default_value":"","external_name":"minify","restriction":"Bool"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(upcase : Bool, minify : Bool, io : IO) : Nil","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L137","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L137","def":{"name":"to_s","args":[{"name":"upcase","doc":null,"default_value":"","external_name":"upcase","restriction":"Bool"},{"name":"minify","doc":null,"default_value":"","external_name":"minify","restriction":"Bool"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if (minify)\n  return to_s_minify(upcase, io)\nend\nhextets.each_with_index do |group, i|\n  if (  i != 0)\n    io << ':'\n  end\n  string = group.to_s(16, upcase: upcase)\n  (4 - string.size).times do\n    io << '0'\n  end\n  io << string\nend\n"}},{"id":"to_s(upcase:Bool=false,minify:Bool=true):String-instance-method","html_id":"to_s(upcase:Bool=false,minify:Bool=true):String-instance-method","name":"to_s","doc":"Returns the presentation representation of the address as a `String`.","summary":"<p>Returns the presentation representation of the address as a <code>String</code>.</p>","abstract":false,"args":[{"name":"upcase","doc":null,"default_value":"false","external_name":"upcase","restriction":"Bool"},{"name":"minify","doc":null,"default_value":"true","external_name":"minify","restriction":"Bool"}],"args_string":"(upcase : Bool = <span class=\"n\">false</span>, minify : Bool = <span class=\"n\">true</span>) : String","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L132","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L132","def":{"name":"to_s","args":[{"name":"upcase","doc":null,"default_value":"false","external_name":"upcase","restriction":"Bool"},{"name":"minify","doc":null,"default_value":"true","external_name":"minify","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return String.build do |io|\n  to_s(upcase, minify, io)\nend"}},{"id":"to_sockaddr(port:UInt16=0_u16):::Pointer(LibC::Sockaddr)-instance-method","html_id":"to_sockaddr(port:UInt16=0_u16):::Pointer(LibC::Sockaddr)-instance-method","name":"to_sockaddr","doc":"Produces the c `sockaddr_in6` struct required by `bind`, `connect`, `sendto`, and `sendmsg`.\n\n**Note:** Unix Network Programming: Volume 1, 3rd Edition, p.71-72\n- sin6_len: default size of this struct is 28 bytes.\n- sin_zero: is unused.\n\nTODO: Set correct scope id","summary":"<p>Produces the c <code>sockaddr_in6</code> struct required by <code>bind</code>, <code>connect</code>, <code>sendto</code>, and <code>sendmsg</code>.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"0_u16","external_name":"port","restriction":"UInt16"}],"args_string":"(port : UInt16 = <span class=\"n\">0_u16</span>) : ::Pointer(LibC::Sockaddr)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L211","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L211","def":{"name":"to_sockaddr","args":[{"name":"port","doc":null,"default_value":"0_u16","external_name":"port","restriction":"UInt16"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Pointer(LibC::Sockaddr)","visibility":"Public","body":"sockaddr = uninitialized LibC::SockaddrIn6\nsockaddr.sin6_len = 28_u8.as(LibC::UInt8T)\nsockaddr.sin6_family = LibC::AF_INET6\nsockaddr.sin6_port = (LibC.htons(port)).as(LibC::UInt16T)\nsockaddr.sin6_flowinfo = 0_u32.as(LibC::UInt32T)\nsockaddr.sin6_scope_id = 0_u32.as(LibC::UInt32T)\n{% if ((flag?(:darwin)) || (flag?(:openbsd))) || (flag?(:freebsd)) %}\n\t\t\tsockaddr.sin6_addr.__u6_addr.__u6_addr16 = value_network\n\t\t{% else %}{% if flag?(:musl) %}\n\t\t\tsockaddr.sin6_addr.__in6_union.__s6_addr16 = value_network\n\t\t{% else %}{% if (flag?(:gnu)) || (flag?(:linux)) %}\n\t\t\tsockaddr.sin6_addr.__in6_u.__u6_addr16 = value_network\n\t\t{% end %}{% end %}{% end %}\nptr = Pointer(LibC::SockaddrIn6).malloc\nptr.copy_from(pointerof(sockaddr), 1)\nreturn ptr.as(::Pointer(LibC::Sockaddr))\n"}},{"id":"value:Value-instance-method","html_id":"value:Value-instance-method","name":"value","doc":"The internally stored value of the address.","summary":"<p>The internally stored value of the address.</p>","abstract":false,"args":[],"args_string":" : Value","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L90","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L90","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Value","visibility":"Public","body":"@value"}},{"id":"value_network:StaticArray(LibC::UInt16T,8)-instance-method","html_id":"value_network:StaticArray(LibC::UInt16T,8)-instance-method","name":"value_network","doc":"The internally stored value of the address in network byte order.","summary":"<p>The internally stored value of the address in network byte order.</p>","abstract":false,"args":[],"args_string":" : StaticArray(LibC::UInt16T, 8)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L93","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L93","def":{"name":"value_network","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"StaticArray(LibC::UInt16T, 8)","visibility":"Public","body":"return StaticArray(LibC::UInt16T, 8).new do |i|\n  next LibC.htons(self[i].as(LibC::UInt16T))\nend"}},{"id":"width:UInt8-instance-method","html_id":"width:UInt8-instance-method","name":"width","doc":"The width of the address type.","summary":"<p>The width of the address type.</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L100","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr#L100","def":{"name":"width","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"return ADDRESS_WIDTH"}}],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6/Hextet","path":"IP/Address/IPv6/Hextet.html","kind":"alias","full_name":"IP::Address::IPv6::Hextet","name":"Hextet","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv6.cr","line_number":22,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"UInt16","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6","kind":"struct","full_name":"IP::Address::IPv6","name":"IPv6"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6/Hextets","path":"IP/Address/IPv6/Hextets.html","kind":"alias","full_name":"IP::Address::IPv6::Hextets","name":"Hextets","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv6.cr","line_number":23,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"Tuple(UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16, UInt16)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6","kind":"struct","full_name":"IP::Address::IPv6","name":"IPv6"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6/Value","path":"IP/Address/IPv6/Value.html","kind":"alias","full_name":"IP::Address::IPv6::Value","name":"Value","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"ip/address/ipv6.cr","line_number":21,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/address/ipv6.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":true,"aliased":"UInt128","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Address/IPv6","kind":"struct","full_name":"IP::Address::IPv6","name":"IPv6"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","path":"IP/Block.html","kind":"struct","full_name":"IP::Block","name":"Block","abstract":true,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/block.cr","line_number":16,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr"},{"filename":"ip/block.cr","line_number":21,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block/IPv4","kind":"struct","full_name":"IP::Block::IPv4","name":"IPv4"},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block/IPv6","kind":"struct","full_name":"IP::Block::IPv6","name":"IPv6"}],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP","kind":"module","full_name":"IP","name":"IP"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"[](string:String):self-class-method","html_id":"[](string:String):self-class-method","name":"[]","doc":"Constructs a new `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L31","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L31","def":{"name":"[]","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return new(string)"}},{"id":"[]?(string:String):self?-class-method","html_id":"[]?(string:String):self?-class-method","name":"[]?","doc":"Constructs a new `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L46","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L46","def":{"name":"[]?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"return new?(string)"}},{"id":"ipv4(string:String):self-class-method","html_id":"ipv4(string:String):self-class-method","name":"ipv4","doc":"Constructs a new IPv4 `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv4 <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L79","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L79","def":{"name":"ipv4","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return IPv4.new(string)"}},{"id":"ipv4?(string:String):self?-class-method","html_id":"ipv4?(string:String):self?-class-method","name":"ipv4?","doc":"Constructs a new IPv4 `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv4 <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L88","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L88","def":{"name":"ipv4?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"return IPv4.new?(string)"}},{"id":"ipv6(string:String):self-class-method","html_id":"ipv6(string:String):self-class-method","name":"ipv6","doc":"Constructs a new IPv6 `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new IPv6 <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L98","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L98","def":{"name":"ipv6","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return IPv6.new(string)"}},{"id":"ipv6?(string:String):self?-class-method","html_id":"ipv6?(string:String):self?-class-method","name":"ipv6?","doc":"Constructs a new IPv6 `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new IPv6 <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L108","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L108","def":{"name":"ipv6?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"return IPv6.new?(string)"}},{"id":"loopback_ipv4:self-class-method","html_id":"loopback_ipv4:self-class-method","name":"loopback_ipv4","doc":"Constructs a `IP::Block:IPv4` representing the IPv4 loopback block.","summary":"<p>Constructs a <code><a href=\"../IP/Block.html\">IP::Block</a>:<a href=\"../IP/Block/IPv4.html\">IPv4</a></code> representing the IPv4 loopback block.</p>","abstract":false,"args":[],"args_string":" : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L113","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L113","def":{"name":"loopback_ipv4","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return IPv4.loopback"}},{"id":"loopback_ipv6:self-class-method","html_id":"loopback_ipv6:self-class-method","name":"loopback_ipv6","doc":"Constructs a `IP::Block:IPv4` representing the IPv4 loopback block.","summary":"<p>Constructs a <code><a href=\"../IP/Block.html\">IP::Block</a>:<a href=\"../IP/Block/IPv4.html\">IPv4</a></code> representing the IPv4 loopback block.</p>","abstract":false,"args":[],"args_string":" : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L118","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L118","def":{"name":"loopback_ipv6","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":""}},{"id":"new(address:IP::Address,block:Int):self?-class-method","html_id":"new(address:IP::Address,block:Int):self?-class-method","name":"new","doc":"Constructs a new `IP::Block` from an address and block size.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> from an address and block size.</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address, block : Int) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L61","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L61","def":{"name":"new","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"return (new?(address, block)) || (raise(MalformedError.new))"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L36","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L36","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || MalformedError.new"}},{"id":"new?(address:IP::Address,block:Int):self?-class-method","html_id":"new?(address:IP::Address,block:Int):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block` from an address and block size.\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> from an address and block size.</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address, block : Int) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L66","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L66","def":{"name":"new?","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"case address\nwhen IP::Address::IPv4\n  return IPv4.new?(address, block)\nwhen IP::Address::IPv6\n  return IPv6.new?(address, block)\nend\nreturn nil\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32],\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128], or XXXX:XXXX::XXXX:XXXX:XXXX/[0-128].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../IP/Block.html\">IP::Block</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L51","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L51","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (string.empty?)\n  return nil\nend\nif ((string.count('.')) == 3)\n  return IPv4.new?(string)\nend\nif ((string.count(':')) > 1)\n  return IPv6.new?(string)\nend\nreturn nil\n"}}],"instance_methods":[{"id":"<(other:IP::Block)-instance-method","html_id":"&lt;(other:IP::Block)-instance-method","name":"<","doc":"Compares this block to *other* returning `true` if the *other* block falls before the\nblock.","summary":"<p>Compares this block to <em>other</em> returning <code>true</code> if the <em>other</em> block falls before the block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L233","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L233","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (first < other.last)"}},{"id":"<=(other:IP::Block)-instance-method","html_id":"&lt;=(other:IP::Block)-instance-method","name":"<=","doc":"Compares this block to *other* returning `true` if the *other* block falls before or\ninside the block.","summary":"<p>Compares this block to <em>other</em> returning <code>true</code> if the <em>other</em> block falls before or inside the block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L239","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L239","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (first <= other.first)"}},{"id":"(other:IP::Block):Int-instance-method","html_id":"(other:IP::Block):Int-instance-method","name":"<=>","doc":"Compares this block with the *other* block, returning `-1`, `0` or `+1` depending\nif the block is less than, inclusive of, or greater than the *other* block.\n\nNote: This is slightly different then the comparitors due to the added complexity\nof a range of values. This is effective for ordering, not comparing inclusivity.\nAs such this object does not include `Comparable` for `IP::Block`s and the comparative\noperators are added manually.","summary":"<p>Compares this block with the <em>other</em> block, returning <code>-1</code>, <code>0</code> or <code>+1</code> depending if the block is less than, inclusive of, or greater than the <em>other</em> block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block) : Int","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L263","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L263","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"if ((first == other.first) && (size == other.size))\n  return 0\nend\nreturn (first <=> other.first)\n"}},{"id":"(other:IP::Address):Int-instance-method","html_id":"(other:IP::Address):Int-instance-method","name":"<=>","doc":"Compares this block with address, returning `-1`, `0` or `+1` depending if the\nblock is less than, inclusive of, or greater than the *other* address.","summary":"<p>Compares this block with address, returning <code>-1</code>, <code>0</code> or <code>+1</code> depending if the block is less than, inclusive of, or greater than the <em>other</em> address.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Int","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L251","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L251","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"if self.includes?(other)\n  return 0\nend\nreturn (first <=> other)\n"}},{"id":"==(other:IP::Block)-instance-method","html_id":"==(other:IP::Block)-instance-method","name":"==","doc":"Compares this block to *other* returning `true` if the *other* block is equal to the\nreceiver.","summary":"<p>Compares this block to <em>other</em> returning <code>true</code> if the <em>other</em> block is equal to the receiver.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L245","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L245","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return ((first == other.first) && (size == other.size))"}},{"id":">(other:IP::Block)-instance-method","html_id":"&gt;(other:IP::Block)-instance-method","name":">","doc":"Compares this block to *other* returning `true` if the *other* block falls after the\nblock.","summary":"<p>Compares this block to <em>other</em> returning <code>true</code> if the <em>other</em> block falls after the block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L221","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L221","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (last > other.first)"}},{"id":">=(other:IP::Block)-instance-method","html_id":"&gt;=(other:IP::Block)-instance-method","name":">=","doc":"Compares this block to *other* returning `true` if the *other* block falls after or\ninside the block.","summary":"<p>Compares this block to <em>other</em> returning <code>true</code> if the <em>other</em> block falls after or inside the block.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L227","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L227","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (last >= other.last)"}},{"id":"address-instance-method","html_id":"address-instance-method","name":"address","doc":"Returns the address component of the block which is also the first address.","summary":"<p>Returns the address component of the block which is also the first address.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L123","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L123","def":{"name":"address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"adjacent?(other:IP::Address):Bool-instance-method","html_id":"adjacent?(other:IP::Address):Bool-instance-method","name":"adjacent?","doc":"Returns a `Bool` indicating if the receiver is 'adjacent' to *other*. That is to\nsay the receiver is immidiatly beside, but not intersecting *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver is 'adjacent' to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L198","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L198","def":{"name":"adjacent?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return ((first.value == (other.value + 1)) || (last.value == (other.value - 1)))"}},{"id":"adjacent?(other:IP::Block):Bool-instance-method","html_id":"adjacent?(other:IP::Block):Bool-instance-method","name":"adjacent?","doc":"Returns a `Bool` indicating if the receiver is 'adjacent' to *other*. That is to\nsay the receiver is immidiatly beside, but not intersecting *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver is 'adjacent' to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L193","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L193","def":{"name":"adjacent?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return ((first.value == (other.last.value + 1)) || (last.value == (other.first.value - 1)))"}},{"id":"block-instance-method","html_id":"block-instance-method","name":"block","doc":"Returns 'block' size in the form aof 2^x, x being the 'size'.","summary":"<p>Returns 'block' size in the form aof 2^x, x being the 'size'.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L126","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L126","def":{"name":"block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"covers?(other:IP::Address):Bool-instance-method","html_id":"covers?(other:IP::Address):Bool-instance-method","name":"covers?","doc":"Returns a `Bool` indicating if the receiver 'covers' *other*. That is to say the receiver\ncompletely includes *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver 'covers' <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L169","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L169","def":{"name":"covers?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return ((first <= other) && (last >= other))"}},{"id":"covers?(other:IP::Block):Bool-instance-method","html_id":"covers?(other:IP::Block):Bool-instance-method","name":"covers?","doc":"Returns a `Bool` indicating if the receiver 'covers' *other*. That is to say the receiver\ncompletely includes *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver 'covers' <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L164","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L164","def":{"name":"covers?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return ((last >= other.last) && (first <= other.first))"}},{"id":"each(&block:IP::Address->Nil):Nil-instance-method","html_id":"each(&amp;block:IP::Address-&gt;Nil):Nil-instance-method","name":"each","doc":"Yield each address to the block.","summary":"<p>Yield each address to the block.</p>","abstract":false,"args":[],"args_string":"(&block : IP::Address -> Nil) : Nil","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L208","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L208","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(IP::Address -> Nil)"},"return_type":"Nil","visibility":"Public","body":"first_addr = first()\ncount.times do |offset|\n  yield first_addr + offset\nend\n"}},{"id":"first:IP::Address-instance-method","html_id":"first:IP::Address-instance-method","name":"first","doc":"Returns the first address in the block.","summary":"<p>Returns the first address in the block.</p>","abstract":false,"args":[],"args_string":" : IP::Address","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L132","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L132","def":{"name":"first","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP::Address","visibility":"Public","body":"return address"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L214","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L214","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"address.hash(hasher)\nblock.hash(hasher)\n"}},{"id":"includes?(other:IP::Address):Bool-instance-method","html_id":"includes?(other:IP::Address):Bool-instance-method","name":"includes?","doc":"Returns a `Bool` indicating if the receiver 'includes' the *other* address.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver 'includes' the <em>other</em> address.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L203","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L203","def":{"name":"includes?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return covers?(other)"}},{"id":"inspect(io:IO):Nil-instance-method","html_id":"inspect(io:IO):Nil-instance-method","name":"inspect","doc":"Appends a type-specified presentation representation of the block to the\ngiven `IO`.","summary":"<p>Appends a type-specified presentation representation of the block to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L270","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L270","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.class.to_s(io)\nio << '('\nto_s(io)\nio << ')'\n"}},{"id":"intersects?(other:IP::Block):Bool-instance-method","html_id":"intersects?(other:IP::Block):Bool-instance-method","name":"intersects?","doc":"Returns a `Bool` indicating if the receiver 'intersects' *other*. That is to say the receiver\npartially includes *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver 'intersects' <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"args_string":"(other : IP::Block) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L175","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L175","def":{"name":"intersects?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"first = first()\nlast = last()\nother_last = other.last\nif (last >= other_last && first <= other.first)\n  return true\nend\nif ((last >= other.first) && (first <= other.first))\n  return true\nend\nif ((first <= other_last) && (last >= other_last))\n  return true\nend\nreturn false\n"}},{"id":"intersects?(other:IP::Address):Bool-instance-method","html_id":"intersects?(other:IP::Address):Bool-instance-method","name":"intersects?","doc":"Returns a `Bool` indicating if the receiver 'intersects' *other*. That is to say the receiver\npartially includes *other*.","summary":"<p>Returns a <code>Bool</code> indicating if the receiver 'intersects' <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"args_string":"(other : IP::Address) : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L187","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L187","def":{"name":"intersects?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IP::Address"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return covers?(other)"}},{"id":"ipv4?:Bool-instance-method","html_id":"ipv4?:Bool-instance-method","name":"ipv4?","doc":"Informs if the block is IPv4 or not.","summary":"<p>Informs if the block is IPv4 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L148","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L148","def":{"name":"ipv4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return false"}},{"id":"ipv6?:Bool-instance-method","html_id":"ipv6?:Bool-instance-method","name":"ipv6?","doc":"Informs if the block is IPv6 or not.","summary":"<p>Informs if the block is IPv6 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L153","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L153","def":{"name":"ipv6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return false"}},{"id":"last:IP::Address-instance-method","html_id":"last:IP::Address-instance-method","name":"last","doc":"Returns the last address in the block.","summary":"<p>Returns the last address in the block.</p>","abstract":false,"args":[],"args_string":" : IP::Address","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L137","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L137","def":{"name":"last","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP::Address","visibility":"Public","body":"if (single_address?)\n  return address\nend\nreturn address + (size - 1)\n"}},{"id":"mask:IP::Address-instance-method","html_id":"mask:IP::Address-instance-method","name":"mask","doc":"Returns the blocks mask.","summary":"<p>Returns the blocks mask.</p>","abstract":false,"args":[],"args_string":" : IP::Address","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L143","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L143","def":{"name":"mask","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP::Address","visibility":"Public","body":"return address.class.new((address.max_value - size()) + 1)"}},{"id":"single_address?:Bool-instance-method","html_id":"single_address?:Bool-instance-method","name":"single_address?","doc":"Informs if the block is a single address or not.","summary":"<p>Informs if the block is a single address or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L158","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L158","def":{"name":"single_address?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return (block == address.width)"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":"Returns the size of the block in terms of number of addresses.","summary":"<p>Returns the size of the block in terms of number of addresses.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L129","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L129","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends the presentation representation of the block to the given `IO`.","summary":"<p>Appends the presentation representation of the block to the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L278","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block.cr#L278","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"address.to_s(io)\n(io << '/') << block\n"}}],"macros":[],"types":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block/IPv4","path":"IP/Block/IPv4.html","kind":"struct","full_name":"IP::Block::IPv4","name":"IPv4","abstract":false,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/block/ipv4.cr","line_number":16,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"loopback:self-class-method","html_id":"loopback:self-class-method","name":"loopback","doc":"Constructs a `IP::Block:IPv4` representing the IPv4 loopback block.","summary":"<p>Constructs a <code><a href=\"../../IP/Block.html\">IP::Block</a>:<a href=\"../../IP/Block/IPv4.html\">IPv4</a></code> representing the IPv4 loopback block.</p>","abstract":false,"args":[],"args_string":" : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L77","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L77","def":{"name":"loopback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return new(IP::Address::IPv4.new(LOOPBACK), 8_u8, LOOPBACK_COUNT)"}},{"id":"new(address:IP::Address::IPv4,block:Int):self-class-method","html_id":"new(address:IP::Address::IPv4,block:Int):self-class-method","name":"new","doc":"Constructs a new `IP::Block::IPv4` from an address and the block size, [0-32].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv4.html\">IP::Block::IPv4</a></code> from an address and the block size, [0-32].</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv4"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address::IPv4, block : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L59","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L59","def":{"name":"new","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv4"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(address, block)) || (raise(MalformedError.new))"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new `IP::Block::IPv4` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv4.html\">IP::Block::IPv4</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L30","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L30","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || (raise(MalformedError.new))"}},{"id":"new?(address:IP::Address::IPv4,block:Int):self?-class-method","html_id":"new?(address:IP::Address::IPv4,block:Int):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block::IPv4` from an address and the block size, [0-32].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv4.html\">IP::Block::IPv4</a></code> from an address and the block size, [0-32].</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv4"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address::IPv4, block : Int) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L66","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L66","def":{"name":"new?","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv4"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (block < 0)\n  return nil\nend\nif (block > IP::Address::IPv4::ADDRESS_WIDTH)\n  return nil\nend\nsize = (2 ** (IP::Address::IPv4::ADDRESS_WIDTH - block))\nif (((IP::Address::IPv4::ADDRESS_MAX - size) + 1) < address.value)\n  return nil\nend\nreturn new(address, block.to_u8, size.to_u32)\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block::IPv4` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to [0-255].[0-255].[0-255].[0-255]/[0-32]\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv4.html\">IP::Block::IPv4</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L39","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L39","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (string.empty?)\n  return nil\nend\nif (!string.ascii_only?)\n  return nil\nend\npart = string.split('/')\nif (part.size != 2)\n  return nil\nend\nblock = part.last\nif (block.empty?)\n  return nil\nend\naddress = IP::Address::IPv4.new?(part.first)\nif (!address)\n  return nil\nend\nblock = block.to_u8(whitespace: false) do\n  return nil\nend\nreturn new?(address, block)\n"}}],"instance_methods":[{"id":"address:IP::Address::IPv4-instance-method","html_id":"address:IP::Address::IPv4-instance-method","name":"address","doc":"Returns the address component of the block which is also the first address.","summary":"<p>Returns the address component of the block which is also the first address.</p>","abstract":false,"args":[],"args_string":" : IP::Address::IPv4","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L82","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L82","def":{"name":"address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP::Address::IPv4","visibility":"Public","body":"@address"}},{"id":"block:UInt8-instance-method","html_id":"block:UInt8-instance-method","name":"block","doc":"Returns 'block' size in the form of 2^x, x being the 'size'.","summary":"<p>Returns 'block' size in the form of 2^x, x being the 'size'.</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L85","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L85","def":{"name":"block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@block"}},{"id":"ipv4?:Bool-instance-method","html_id":"ipv4?:Bool-instance-method","name":"ipv4?","doc":"Informs if the block is IPv4 or not.","summary":"<p>Informs if the block is IPv4 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L91","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L91","def":{"name":"ipv4?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return true"}},{"id":"size:UInt32-instance-method","html_id":"size:UInt32-instance-method","name":"size","doc":"Returns the size of the block in terms of number of addresses.","summary":"<p>Returns the size of the block in terms of number of addresses.</p>","abstract":false,"args":[],"args_string":" : UInt32","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L88","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv4.cr#L88","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@size"}}],"macros":[],"types":[]},{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block/IPv6","path":"IP/Block/IPv6.html","kind":"struct","full_name":"IP::Block::IPv6","name":"IPv6","abstract":false,"superclass":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},"ancestors":[{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/chris-huxtable/ip_address.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"ip/block/ipv6.cr","line_number":16,"url":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr"}],"repository_name":"github.com/chris-huxtable/ip_address.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/chris-huxtable/ip_address.cr/IP/Block","kind":"struct","full_name":"IP::Block","name":"Block"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"loopback:self-class-method","html_id":"loopback:self-class-method","name":"loopback","doc":"Constructs a `IP::Block:IPv6` representing the IPv6 loopback block.","summary":"<p>Constructs a <code><a href=\"../../IP/Block.html\">IP::Block</a>:<a href=\"../../IP/Block/IPv6.html\">IPv6</a></code> representing the IPv6 loopback block.</p>","abstract":false,"args":[],"args_string":" : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L79","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L79","def":{"name":"loopback","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return new(IP::Address::IPv6.new(LOOPBACK), 128_u8, LOOPBACK_COUNT)"}},{"id":"new(address:IP::Address::IPv6,block:Int):self-class-method","html_id":"new(address:IP::Address::IPv6,block:Int):self-class-method","name":"new","doc":"Constructs a new `IP::Block::IPv6` from an address and the block size, [0-128].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv6.html\">IP::Block::IPv6</a></code> from an address and the block size, [0-128].</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv6"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address::IPv6, block : Int) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L61","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L61","def":{"name":"new","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv6"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(address, block)) || (raise(MalformedError.new))"}},{"id":"new(string:String):self-class-method","html_id":"new(string:String):self-class-method","name":"new","doc":"Constructs a new `IP::Block::IPv6` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to XXXX:XXXX::XXXX:XXXX:XXXX/[0-128], or\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128].\n\nRaises: `MalformedError` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv6.html\">IP::Block::IPv6</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L31","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L31","def":{"name":"new","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"return (new?(string)) || (raise(MalformedError.new))"}},{"id":"new?(address:IP::Address::IPv6,block:Int):self?-class-method","html_id":"new?(address:IP::Address::IPv6,block:Int):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block::IPv6` from an address and the block size, [0-128].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv6.html\">IP::Block::IPv6</a></code> from an address and the block size, [0-128].</p>","abstract":false,"args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv6"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"args_string":"(address : IP::Address::IPv6, block : Int) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L68","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L68","def":{"name":"new?","args":[{"name":"address","doc":null,"default_value":"","external_name":"address","restriction":"IP::Address::IPv6"},{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (block < 0)\n  return nil\nend\nif (block > IP::Address::IPv6::ADDRESS_WIDTH)\n  return nil\nend\nsize = (2_u128 ** (IP::Address::IPv6::ADDRESS_WIDTH - block))\nif (((IP::Address::IPv6::ADDRESS_MAX - size) + 1_u128) < address.value)\n  return nil\nend\nreturn new(address, block.to_u8, size.to_u128)\n"}},{"id":"new?(string:String):self?-class-method","html_id":"new?(string:String):self?-class-method","name":"new?","doc":"Constructs a new `IP::Block::IPv6` by interpreting the contents of a given `String`.\n\nExpects a definition in CIDR notation similar to XXXX:XXXX::XXXX:XXXX:XXXX/[0-128], or\nXXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX:XXXX/[0-128].\n\nReturns `nil` when the input is malformed.","summary":"<p>Constructs a new <code><a href=\"../../IP/Block/IPv6.html\">IP::Block::IPv6</a></code> by interpreting the contents of a given <code>String</code>.</p>","abstract":false,"args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"args_string":"(string : String) : self?","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L41","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L41","def":{"name":"new?","args":[{"name":"string","doc":null,"default_value":"","external_name":"string","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"if (string.empty?)\n  return nil\nend\nif (!string.ascii_only?)\n  return nil\nend\npart = string.split('/')\nif (part.size != 2)\n  return nil\nend\nblock = part.last\nif (block.empty?)\n  return nil\nend\naddress = IP::Address::IPv6.new?(part.first)\nif (!address)\n  return nil\nend\nblock = block.to_u8(whitespace: false) do\n  return nil\nend\nreturn new?(address, block)\n"}}],"instance_methods":[{"id":"address:IP::Address::IPv6-instance-method","html_id":"address:IP::Address::IPv6-instance-method","name":"address","doc":"Returns the address component of the block which is also the first address.","summary":"<p>Returns the address component of the block which is also the first address.</p>","abstract":false,"args":[],"args_string":" : IP::Address::IPv6","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L84","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L84","def":{"name":"address","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IP::Address::IPv6","visibility":"Public","body":"@address"}},{"id":"block:UInt8-instance-method","html_id":"block:UInt8-instance-method","name":"block","doc":"Returns 'block' size in the form of 2^x, x being the 'size'.","summary":"<p>Returns 'block' size in the form of 2^x, x being the 'size'.</p>","abstract":false,"args":[],"args_string":" : UInt8","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L87","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L87","def":{"name":"block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"@block"}},{"id":"ipv6?:Bool-instance-method","html_id":"ipv6?:Bool-instance-method","name":"ipv6?","doc":"Informs if the block is IPv6 or not.","summary":"<p>Informs if the block is IPv6 or not.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L93","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L93","def":{"name":"ipv6?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return true"}},{"id":"size:UInt128-instance-method","html_id":"size:UInt128-instance-method","name":"size","doc":"Returns the size of the block in terms of number of addresses.","summary":"<p>Returns the size of the block in terms of number of addresses.</p>","abstract":false,"args":[],"args_string":" : UInt128","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L90","source_link":"https://github.com/chris-huxtable/ip_address.cr/blob/12861ed3f6a2cfaf5d020c837aa9c3f2457b9b59/src/ip/block/ipv6.cr#L90","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt128","visibility":"Public","body":"@size"}}],"macros":[],"types":[]}]}]}]}})